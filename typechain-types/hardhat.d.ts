/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ChainLinkToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainLinkToken__factory>;
    getContractFactory(
      name: "MyToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyToken__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlMixin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlMixin__factory>;
    getContractFactory(
      name: "EIP712Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Base__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Capped",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Capped__factory>;
    getContractFactory(
      name: "GFarm2Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GFarm2Token__factory>;
    getContractFactory(
      name: "IChildToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChildToken__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "NativeMetaTransaction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NativeMetaTransaction__factory>;
    getContractFactory(
      name: "AggregatorInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorInterfaceV5__factory>;
    getContractFactory(
      name: "GFarmTradingStorageV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GFarmTradingStorageV5__factory>;
    getContractFactory(
      name: "PausableInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableInterfaceV5__factory>;
    getContractFactory(
      name: "PoolInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolInterfaceV5__factory>;
    getContractFactory(
      name: "TokenInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenInterfaceV5__factory>;
    getContractFactory(
      name: "AggregatorInterfaceV6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorInterfaceV6__factory>;
    getContractFactory(
      name: "GNSPairInfosV6_1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GNSPairInfosV6_1__factory>;
    getContractFactory(
      name: "PairsStorageInterfaceV6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairsStorageInterfaceV6__factory>;
    getContractFactory(
      name: "StorageInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StorageInterfaceV5__factory>;
    getContractFactory(
      name: "TokenInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenInterfaceV5__factory>;
    getContractFactory(
      name: "UniswapRouterInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapRouterInterfaceV5__factory>;
    getContractFactory(
      name: "VaultInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultInterfaceV5__factory>;
    getContractFactory(
      name: "AggregatorInterfaceV6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorInterfaceV6__factory>;
    getContractFactory(
      name: "GNSPairsStorageV6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GNSPairsStorageV6__factory>;
    getContractFactory(
      name: "PairsStorageInterfaceV6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairsStorageInterfaceV6__factory>;
    getContractFactory(
      name: "StorageInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StorageInterfaceV5__factory>;
    getContractFactory(
      name: "TokenInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenInterfaceV5__factory>;
    getContractFactory(
      name: "UniswapRouterInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapRouterInterfaceV5__factory>;
    getContractFactory(
      name: "VaultInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultInterfaceV5__factory>;
    getContractFactory(
      name: "ChainlinkClient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkClient__factory>;
    getContractFactory(
      name: "ChainlinkRequestInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkRequestInterface__factory>;
    getContractFactory(
      name: "ENSInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ENSInterface__factory>;
    getContractFactory(
      name: "LinkTokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinkTokenInterface__factory>;
    getContractFactory(
      name: "OperatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorInterface__factory>;
    getContractFactory(
      name: "OracleInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleInterface__factory>;
    getContractFactory(
      name: "PointerInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PointerInterface__factory>;
    getContractFactory(
      name: "ENSResolver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ENSResolver__factory>;
    getContractFactory(
      name: "IUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Pool__factory>;
    getContractFactory(
      name: "IUniswapV3PoolActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolDerivedState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolDerivedState__factory>;
    getContractFactory(
      name: "IUniswapV3PoolErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolErrors__factory>;
    getContractFactory(
      name: "IUniswapV3PoolEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolEvents__factory>;
    getContractFactory(
      name: "IUniswapV3PoolImmutables",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolImmutables__factory>;
    getContractFactory(
      name: "IUniswapV3PoolOwnerActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolOwnerActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolState__factory>;
    getContractFactory(
      name: "TickMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TickMath__factory>;
    getContractFactory(
      name: "CallbacksInterfaceV6_2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CallbacksInterfaceV6_2__factory>;
    getContractFactory(
      name: "ChainlinkFeedInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkFeedInterfaceV5__factory>;
    getContractFactory(
      name: "IGToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGToken__factory>;
    getContractFactory(
      name: "PairsStorageInterfaceV6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairsStorageInterfaceV6__factory>;
    getContractFactory(
      name: "AggregatorInterfaceV6_2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorInterfaceV6_2__factory>;
    getContractFactory(
      name: "PausableInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableInterfaceV5__factory>;
    getContractFactory(
      name: "PoolInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolInterfaceV5__factory>;
    getContractFactory(
      name: "StorageInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StorageInterfaceV5__factory>;
    getContractFactory(
      name: "TokenInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenInterfaceV5__factory>;
    getContractFactory(
      name: "GNSPriceAggregatorV6_3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GNSPriceAggregatorV6_3__factory>;
    getContractFactory(
      name: "TWAPPriceGetter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TWAPPriceGetter__factory>;
    getContractFactory(
      name: "GNSStakingV6_2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GNSStakingV6_2__factory>;
    getContractFactory(
      name: "TokenInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenInterfaceV5__factory>;
    getContractFactory(
      name: "AggregatorInterfaceV6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorInterfaceV6__factory>;
    getContractFactory(
      name: "GNSPairInfosInterfaceV6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GNSPairInfosInterfaceV6__factory>;
    getContractFactory(
      name: "GNSTradingV6_1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GNSTradingV6_1__factory>;
    getContractFactory(
      name: "PairsStorageInterfaceV6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairsStorageInterfaceV6__factory>;
    getContractFactory(
      name: "StorageInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StorageInterfaceV5__factory>;
    getContractFactory(
      name: "TokenInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenInterfaceV5__factory>;
    getContractFactory(
      name: "UniswapRouterInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapRouterInterfaceV5__factory>;
    getContractFactory(
      name: "VaultInterfaceV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultInterfaceV5__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ChainLinkToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainLinkToken>;
    getContractAt(
      name: "MyToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MyToken>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlMixin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlMixin>;
    getContractAt(
      name: "EIP712Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Base>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Capped",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Capped>;
    getContractAt(
      name: "GFarm2Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GFarm2Token>;
    getContractAt(
      name: "IChildToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChildToken>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "NativeMetaTransaction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NativeMetaTransaction>;
    getContractAt(
      name: "AggregatorInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorInterfaceV5>;
    getContractAt(
      name: "GFarmTradingStorageV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GFarmTradingStorageV5>;
    getContractAt(
      name: "PausableInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableInterfaceV5>;
    getContractAt(
      name: "PoolInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolInterfaceV5>;
    getContractAt(
      name: "TokenInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenInterfaceV5>;
    getContractAt(
      name: "AggregatorInterfaceV6",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorInterfaceV6>;
    getContractAt(
      name: "GNSPairInfosV6_1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GNSPairInfosV6_1>;
    getContractAt(
      name: "PairsStorageInterfaceV6",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PairsStorageInterfaceV6>;
    getContractAt(
      name: "StorageInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StorageInterfaceV5>;
    getContractAt(
      name: "TokenInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenInterfaceV5>;
    getContractAt(
      name: "UniswapRouterInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapRouterInterfaceV5>;
    getContractAt(
      name: "VaultInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultInterfaceV5>;
    getContractAt(
      name: "AggregatorInterfaceV6",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorInterfaceV6>;
    getContractAt(
      name: "GNSPairsStorageV6",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GNSPairsStorageV6>;
    getContractAt(
      name: "PairsStorageInterfaceV6",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PairsStorageInterfaceV6>;
    getContractAt(
      name: "StorageInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StorageInterfaceV5>;
    getContractAt(
      name: "TokenInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenInterfaceV5>;
    getContractAt(
      name: "UniswapRouterInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapRouterInterfaceV5>;
    getContractAt(
      name: "VaultInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultInterfaceV5>;
    getContractAt(
      name: "ChainlinkClient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkClient>;
    getContractAt(
      name: "ChainlinkRequestInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkRequestInterface>;
    getContractAt(
      name: "ENSInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ENSInterface>;
    getContractAt(
      name: "LinkTokenInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinkTokenInterface>;
    getContractAt(
      name: "OperatorInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorInterface>;
    getContractAt(
      name: "OracleInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleInterface>;
    getContractAt(
      name: "PointerInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PointerInterface>;
    getContractAt(
      name: "ENSResolver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ENSResolver>;
    getContractAt(
      name: "IUniswapV3Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3Pool>;
    getContractAt(
      name: "IUniswapV3PoolActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolActions>;
    getContractAt(
      name: "IUniswapV3PoolDerivedState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolDerivedState>;
    getContractAt(
      name: "IUniswapV3PoolErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolErrors>;
    getContractAt(
      name: "IUniswapV3PoolEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolEvents>;
    getContractAt(
      name: "IUniswapV3PoolImmutables",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolImmutables>;
    getContractAt(
      name: "IUniswapV3PoolOwnerActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolOwnerActions>;
    getContractAt(
      name: "IUniswapV3PoolState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolState>;
    getContractAt(
      name: "TickMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TickMath>;
    getContractAt(
      name: "CallbacksInterfaceV6_2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CallbacksInterfaceV6_2>;
    getContractAt(
      name: "ChainlinkFeedInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkFeedInterfaceV5>;
    getContractAt(
      name: "IGToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGToken>;
    getContractAt(
      name: "PairsStorageInterfaceV6",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PairsStorageInterfaceV6>;
    getContractAt(
      name: "AggregatorInterfaceV6_2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorInterfaceV6_2>;
    getContractAt(
      name: "PausableInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableInterfaceV5>;
    getContractAt(
      name: "PoolInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolInterfaceV5>;
    getContractAt(
      name: "StorageInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StorageInterfaceV5>;
    getContractAt(
      name: "TokenInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenInterfaceV5>;
    getContractAt(
      name: "GNSPriceAggregatorV6_3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GNSPriceAggregatorV6_3>;
    getContractAt(
      name: "TWAPPriceGetter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TWAPPriceGetter>;
    getContractAt(
      name: "GNSStakingV6_2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GNSStakingV6_2>;
    getContractAt(
      name: "TokenInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenInterfaceV5>;
    getContractAt(
      name: "AggregatorInterfaceV6",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorInterfaceV6>;
    getContractAt(
      name: "GNSPairInfosInterfaceV6",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GNSPairInfosInterfaceV6>;
    getContractAt(
      name: "GNSTradingV6_1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GNSTradingV6_1>;
    getContractAt(
      name: "PairsStorageInterfaceV6",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PairsStorageInterfaceV6>;
    getContractAt(
      name: "StorageInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StorageInterfaceV5>;
    getContractAt(
      name: "TokenInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenInterfaceV5>;
    getContractAt(
      name: "UniswapRouterInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapRouterInterfaceV5>;
    getContractAt(
      name: "VaultInterfaceV5",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultInterfaceV5>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
